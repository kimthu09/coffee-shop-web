name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: ["1.19", "1.21"]
        node-version: ["18.18.0"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - node-version: "18.18.0"
            next-env: "production"

    services:
      mysql:
        image: mysql:8.0.33-debian
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: cfshopmanagement
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up Node.js for Next.js frontend
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Wait for MySQL to start
        run: |
          until mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
            echo "waiting for mysql"
            sleep 2
          done

      - name: Replace DSN in .env
        run: |
          cd backend
          sed -i "s|root:123456@tcp(cfsm-mysql:3306)/cfshopmanagement|root:123456@tcp(127.0.0.1:3306)/cfshopmanagement|" .env

      - name: Build Go backend
        run: |
          cd backend
          go build -v ./...

      - name: Run Coverage Go backend
        run: |
          cd backend
          go test ./... -coverprofile cover.out
          COVERAGE=$(go tool cover -func cover.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total Coverage: $COVERAGE%"
          if [ $(echo "$COVERAGE < 90" | bc) -ne 0 ]; then
            echo "Coverage is below 90%"
            exit 1
          fi

      - name: Install dependencies for Next.js frontend
        run: |
          cd frontend
          npm install

      - name: Build Next.js frontend
        run: |
          cd frontend
          NEXT_PUBLIC_ENVIRONMENT=${{ matrix.next-env }} npm run build

  mutation-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run Gremlins in Docker
        run: |
          docker run --rm -v ${{ github.workspace }}/backend:/app -w /app gogremlins/gremlins gremlins unleash
